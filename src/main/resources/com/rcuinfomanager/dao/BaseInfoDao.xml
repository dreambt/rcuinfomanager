<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rcuinfomanager.dao.BaseInfoDao">

    <resultMap id="userListInfo" type="com.rcuinfomanager.model.CustomerListInfo">
        <result column="recordId" property="recordId"></result>
        <result column="customerName" property="customerName"></result>
        <result column="telephone" property="telephone"></result>
        <result column="submitTime" property="submitTime"></result>
        <result column="organizationName" property="organizationName"></result>
        <result column="displayUserName" property="displayUserName"></result>
        <result column="state" property="state"></result>
    </resultMap>

    <!-- //管理员获取数据列表-->
    <select id="queryAdminByBaseInfoByPage" resultMap="userListInfo">
        select b.recordId,b.customerName,b.telephone,b.submitTime,org.organizationName,u.displayUserName,b.state
        from baseinfo b
        left outer join usersinfo u on b.userName=u.userName
        left outer join organizationInfo org on u.organizationId=org.organizationId limit #{beginPageNum}, #{endPageNum}
    </select>

    <select id="queryAdminByBaseInfoByCount" resultType="java.lang.Long">
        select count(*)
        from baseinfo b
        left outer join usersinfo u on b.userName=u.userName
        left outer join organizationInfo org on u.organizationId=org.organizationId
    </select>
    <!-- 普通用户获取数据列表-->
    <select id="queryNormalByBaseInfoByPage" parameterType="java.lang.Long" resultMap="userListInfo">
        select b.recordId,b.customerName,b.telephone,b.submitTime,org.organizationName,u.displayUserName,b.state
        from baseinfo b
        left outer join usersinfo u on b.userName=u.userName
        left outer join organizationInfo org on u.organizationId=org.organizationId
        where u.userId=#{userId} limit #{beginPageNum}, #{endPageNum}
    </select>

    <select id="queryNormalByBaseInfoByCount" parameterType="java.lang.Long" resultType="java.lang.Long">
        select count(*)
        from baseinfo b
        left outer join usersinfo u on b.userName=u.userName
        left outer join organizationInfo org on u.organizationId=org.organizationId
        where u.userId=#{userId}
    </select>


    <!--显示客户个人信息-->
    <select id="getPersonBasicInfo" parameterType="java.lang.Long" resultMap="userListInfo">
        select b.recordId,b.customerName,b.telephone,org.organizationName,u.displayUserName
        from baseinfo b
        left outer join usersinfo u on b.userName=u.userName
        left outer join organizationInfo org on u.organizationId=org.organizationId
        where b.recordId=#{recordId}
    </select>

    <!--<resultMap id="cusBasicMap" type="com.rcuinfomanager.model.CusBaseInfo">
        <result column="customerName" property="customerName"></result>
        <result column="gender" property="gender"></result>
        <result column="isFarmer" property="isFarmer"></result>
        <result column="customerType" property="customerType"></result>
        <result column="cerType" property="cerType"></result>
        <result column="cerNum" property="cerNum"></result>
        <result column="cerValidityFrom" property="cerValidityFrom"></result>
        <result column="cerValidityTo" property="cerValidityTo"></result>
        <result column="birthday" property="birthday"></result>
        <result column="nationality" property="nationality"></result>
        <result column="isHavePassport" property="isHavePassport"></result>
        <result column="nation" property="nation"></result>
        <result column="poliLaspect" property="poliLaspect"></result>
        <result column="health" property="health"></result>
        <result column="maritalStatus" property="maritalStatus"></result>
        <result column="address" property="address"></result>
        <result column="postcode" property="postcode"></result>
        <result column="areaName" property="areaName"></result>
        <result column="village" property="village"></result>
        <result column="telephone" property="telephone"></result>
        <result column="mbPhoneNum" property="mbPhoneNum"></result>
        <result column="liveCondition" property="liveCondition"></result>
        <result column="socialSecurity" property="socialSecurity"></result>
        <result column="highestDegree" property="highestDegree"></result>
        <result column="highestEdu" property="highestEdu"></result>
        <result column="bankRelation" property="bankRelation"></result>
        <result column="bankPartnership" property="bankPartnership"></result>
        <result column="profession" property="profession"></result>
        <result column="businessProj" property="businessProj"></result>
        <result column="businessYear" property="businessYear"></result>
        <result column="businessSite" property="businessSite"></result>
        <result column="industry" property="industry"></result>
        <result column="businessProp" property="businessProp"></result>
        <result column="moneySitu" property="moneySitu"></result>
        <result column="inputMoney" property="inputMoney"></result>
        <result column="ownMoney" property="ownMoney"></result>
        <result column="yearIncome" property="yearIncome"></result>
        <result column="workSitu" property="workSitu"></result>
        <result column="unitProp" property="unitProp"></result>
        <result column="unitIndustryId" property="unitIndustryId"></result>
        <result column="department" property="department"></result>
        <result column="unitType" property="unitType"></result>
        <result column="duties" property="duties"></result>
        <result column="annualWageIncome" property="annualWageIncome"></result>
        <result column="workYears" property="workYears"></result>
        <result column="workTitle" property="workTitle"></result>
        <result column="photoUri" property="photoUri"></result>
    </resultMap>-->
    <!--获取客户的基本信息-->
    <select id="getCusBasicInfo" parameterType="java.lang.Long" resultType="com.rcuinfomanager.model.CusBaseInfo">
       select b.customerName,b.gender,b.isFarmer,b.customerType,b.cerType,b.cerNum,b.cerValidityFrom,b.cerValidityTo,b.birthday,b.nationality,b.isHavePassport,
               b.nation,b.poliLaspect,b.health,b.maritalStatus,b.address,b.postcode,b.areaName,b.village,b.telephone,b.mbPhoneNum,b.liveCondition,
               b.socialSecurity,b.highestDegree,b.highestEdu,b.bankRelation,b.bankPartnership,b.profession,b.businessProj,b.businessYear,
               b.businessSite,b.industry,b.businessProp,b.moneySitu,b.inputMoney,b.ownMoney,b.yearIncome,b.workSitu,b.unitProp,b.unitIndustryId,
               b.department,b.unitType,b.duties,b.annualWageIncome,b.workYears,b.workTitle,p.photoUri
	   from baseinfo b
	   left outer join photosInfo p on b.recordId = p.recordId
       where b.recordId=#{recordId}
    </select>

    <resultMap id="incomeExpensesMap" type="com.rcuinfomanager.model.IncomeExpenses">
        <result column="fmAllIncome" property="fmAllIncome"></result>
        <result column="fmExpenses" property="fmExpenses"></result>
        <result column="incomeSrc" property="incomeSrc"></result>
        <result column="perIncome" property="perIncome"></result>
        <result column="fmOtherMemberIn" property="fmOtherMemberIn"></result>
        <result column="businessProp" property="businessProp"></result>
        <result column="moneySitu" property="moneySitu"></result>
        <result column="inputMoney" property="inputMoney"></result>
        <result column="ownMoney" property="ownMoney"></result>
        <result column="fmExpensesProj" property="fmExpensesProj"></result>
        <result column="fmInOutRatio" property="fmInOutRatio"></result>
    </resultMap>
    <!--获取家庭收支情况-->
    <select id="getIncomeExpenses" parameterType="java.lang.Long" resultMap="incomeExpensesMap">
        select i.fmAllIncome,i.fmExpenses,i.incomeSrc,i.perIncome,i.fmOtherMemberIn,b.businessProp,b.moneySitu,
                b.inputMoney,b.ownMoney,i.fmExpensesProj,i.fmInOutRatio
          from baseInfo b
          left outer join incomeexpenses i on b.recordId = i.recordId
          where i.recordId=#{recordId}
    </select>

    <!--获取家庭资产情况-->
    <!--<resultMap id="familyAssetsMap" type="com.rcuinfomanager.model.FamilyAssets">
        <result column="fmAllAssets" property="fmAllAssets"></result>
        <result column="mainAssets" property="mainAssets"></result>
    </resultMap>-->
    <select id="getFamilyAssets" parameterType="java.lang.Long" resultType="com.rcuinfomanager.model.FamilyAssets">
             select f.assetsId, f.fmAllAssets, f.mainAssets from familyAssets f where f.recordId=#{recordId}
    </select>

    <!--房产-->
    <resultMap id="housePropertyInfoMap" type="com.rcuinfomanager.model.HouseInfo">
        <result column="id" property="id"></result>
        <result column="nature" property="nature"></result>
        <result column="use" property="use"></result>
        <result column="site" property="site"></result>
        <result column="structure" property="structure"></result>
        <result column="floorNum" property="floorNum"></result>
        <result column="usedSitu" property="usedSitu"></result>
        <result column="houseArea" property="houseArea"></result>
        <result column="houseWorth" property="houseWorth"></result>
        <result column="isInstallment" property="isInstallment"></result>
        <result column="hasCredentials" property="hasCredentials"></result>
        <result column="note1" property="note1"></result>
    </resultMap>
    <select id="getHousePropertyInfo" parameterType="java.lang.Long" resultMap="housePropertyInfoMap">
            select h.id, h.nature,h.purpose,h.site,h.structure,h.floorNum,h.usedSitu,h.houseArea,h.houseWorth,
                    h.isInstallment,h.hasCredentials,h.note1
            from housepropertyinfo h
            left outer join  familyassets f on f.assetsId=h.assetsId
            where f.recordId=#{recordId}
     </select>

     <update id="updateHouseInfo" parameterType="com.rcuinfomanager.model.HouseInfo">
         insert into housepropertyinfo (nature,purpose,site,structure,floorNum,usedSitu,houseArea,houseWorth,isInstallment,hasCredentials,note1)
         values (#{nature},#{purpose},#{site},#{structure},#{floorNum},#{usedSitu},#{houseArea},#{houseWorth},#{isInstallment},#{hasCredentials},#{note1})
         where assetsId=#{assetsId}
     </update>

    <!--获取土地信息-->
    <resultMap id="landInfoMap" type="com.rcuinfomanager.model.LandInfo">
        <result column="id" property="id"></result>
        <result column="area" property="area"></result>
        <result column="worth" property="worth"></result>
        <result column="property" property="property"></result>
        <result column="type" property="type"></result>
        <result column="usedSitu" property="usedSitu"></result>
        <result column="isMoneyClear" property="isMoneyClear"></result>
    </resultMap>
    <select id="getLandInfo" parameterType="java.lang.Long" resultMap="landInfoMap">
         select land.area,land.worth,land.property,land.type,land.usedSitu,land.isMoneyClear
         from landinfo land
         left outer join familyassets f on f.assetsId = land.assetsId
         where f.recordId=#{recordId}
    </select>

    <!--获取车辆信息-->
    <resultMap id="carsInfoMap" type="com.rcuinfomanager.model.CarsInfo">
        <result column="id" property="id"></result>
        <result column="carsInfo" property="carsInfo"></result>
        <result column="carsWorth" property="carsWorth"></result>
        <result column="carsIsInstallment" property="carsIsInstallment"></result>
        <result column="carsUsingInfo" property="carsUsingInfo"></result>
    </resultMap>
    <select id="getCarsInfo" parameterType="java.lang.Long" resultMap="carsInfoMap">
         select car.id, car.carsInfo,car.carsWorth,car.carsIsInstallment,car.carsUsingInfo
         from carsInfo car
         left outer join familyassets fa on fa.assetsId = car.assetsId
         where fa.recordId=#{recordId}
    </select>

    <!--负责情况信息-->
    <resultMap id="familyIncurDebtsMap" type="com.rcuinfomanager.model.FamilyIncurDebts">
        <result column="fmIncurDebts" property="fmIncurDebts"></result>
        <result column="ourBankDebts" property="ourBankDebts"></result>
        <result column="otherBankDebts" property="otherBankDebts"></result>
        <result column="loanPurpose" property="loanPurpose"></result>
        <result column="loanShap" property="loanShap"></result>
    </resultMap>
    <select id="getFamilyIncurDebts" parameterType="java.lang.Long" resultMap="familyIncurDebtsMap">
         select fid.fmIncurDebts,fid.ourBankDebts,fid.otherBankDebts,fid.loanPurpose,fid.loanShap
         from  familyincurdebts fid where fid.recordId=#{recordId}
    </select>

    <!--获取家庭成员信息 -->
    <resultMap id="familyMemberMap" type="com.rcuinfomanager.model.FamilyMember">
        <result column="id" property="id"></result>
        <result column="familyMemberName" property="familyMemberName"></result>
        <result column="yearIncome" property="yearIncome"></result>
        <result column="leaderRelation" property="leaderRelation"></result>
        <result column="address" property="address"></result>
        <result column="profession" property="profession"></result>
        <result column="familyMemberCerNum" property="familyMemberCerNum"></result>
        <result column="cerNum" property="cerNum"></result>
    </resultMap>
    <select id="getFamilyMember" parameterType="java.lang.Long" resultMap="familyMemberMap">
        select f.id, f.familyMemberName,f.yearIncome,f.leaderRelation,f.address,f.profession,f.familyMemberCerNum, f.cerNum
        from familymemberinfo f where f.recordId=#{recordId}
    </select>

    <!--金融资产信息-->
    <resultMap id="financialAssetsMap" type="com.rcuinfomanager.model.FinancialAssets">
        <result column="financialInfo" property="financialInfo"></result>
        <result column="depositOurBank" property="depositOurBank"></result>
        <result column="depositOtherBank" property="depositOtherBank"></result>
    </resultMap>
    <select id="getFinancialAssets" parameterType="java.lang.Long" resultMap="financialAssetsMap">
         select fin.financialInfo,fin.depositOurBank,fin.depositOtherBank
         from familyassets fa
           left outer join financialAssets fin on fa.assetsId = fin.assetsId
           where fa.recordId=#{recordId}
    </select>
    <!--指派网点-->
    <select id="getAdminOrganizationName" resultMap="userListInfo">
         select org.organizationName from organizationInfo org
    </select>
    <select id="getUserOrganizationName" parameterType="java.lang.Long" resultMap="userListInfo">
         select org.organizationName
          from usersinfo u
          left outer join organizationInfo org on u.organizationId=org.organizationId
          where u.userId=#{userId}
    </select>
    <!--删除-->
    <delete id="deleteInfo" parameterType="java.lang.Long">
           delete from baseinfo b
           left outer join familymemberinfo fm on b.recordId=fm.recordId
           left outer join photosinfo pho on b.recordId = pho.recordId
           left outer join familyincurdebts fid on b.recordId = fid.recordId
           left outer join incomeexpenses ies on b.recordId = ies.recordId
           left outer join familyassets fas on b.recordId = fas.recordId
           left outer join housepropertyinfo h on fas.assetsId= h.assetsId
           left outer join landinfo land on fas.assetsId=land.assetsId
           left outer join carsinfo car on fas.assetsId=car.assetsId
           left outer join financialassets fin on fas.assetsId=fin.assetsId
           where b.recordId=#{recordId}
    </delete>
    <!--111111111111111111111111111111111111111111111-->
    <insert id="saveSimpleBaseInfo" parameterType="com.rcuinfomanager.model.BaseInfo" >
        insert into baseinfo(customerName,cerNum,nation) values (#{customerName},#{cerNum},#{nation})
    </insert>

    <resultMap id="allColumnInfoList" type="com.rcuinfomanager.webservice.model.AllColumnInfo">
        <result column="recordId" property="recordId"></result>
        <result column="customerName" property="customerName"></result>
        <result column="cerNum" property="cerNum"></result>
        <result column="gender" property="gender"></result>
        <result column="isFarmer" property="isFarmer"></result>
        <result column="cerType" property="cerType"></result>
        <result column="custType" property="customerType"></result>
        <result column="cerValidityFrom" property="cerValidityFrom"></result>
        <result column="cerValidityTo" property="cerValidityTo"></result>
        <result column="birthday" property="birthday"></result>
        <result column="nationality" property="nationality"></result>
        <result column="isHavePassport" property="isHavePassport"></result>
        <result column="nation" property="nation"></result>
        <result column="poliLaspect" property="poliLaspect"></result>
        <result column="address" property="address"></result>
        <result column="postcode" property="postcode"></result>
        <result column="telephone" property="telephone"></result>
        <result column="mbPhoneNum" property="mbPhoneNum"></result>
        <result column="areaCode" property="areaCode"></result>
        <result column="areaName" property="areaName"></result>
        <result column="highestDegree" property="highestDegree"></result>
        <result column="health" property="health"></result>
        <result column="highestEdu" property="highestEdu"></result>
        <result column="bankRelation" property="bankRelation"></result>
        <result column="liveCondition" property="liveCondition"></result>
        <result column="maritalStatus" property="maritalStatus"></result>
        <result column="socialSecurity" property="socialSecurity"></result>
        <result column="bankPartnership" property="bankPartnership"></result>
        <result column="profession" property="profession"></result>
        <result column="businessProj" property="businessProj"></result>
        <result column="businessYear" property="businessYear"></result>
        <result column="businessSite" property="businessSite"></result>
        <result column="industry" property="industry"></result>
        <result column="businessProp" property="businessProp"></result>
        <result column="moneySitu" property="moneySitu"></result>
        <result column="inputMoney" property="inputMoney"></result>
        <result column="ownMoney" property="ownMoney"></result>
        <result column="yearIncome" property="yearIncome"></result>
        <result column="workSitu" property="workSitu"></result>
        <result column="unitProp" property="unitProp"></result>
        <result column="unitIndustryId" property="unitIndustryId"></result>
        <result column="unitIndustryName" property="unitIndustryName"></result>
        <result column="department" property="department"></result>
        <result column="unitType" property="unitType"></result>
        <result column="duties" property="duties"></result>
        <result column="annualWageIncome" property="annualWageIncome"></result>
        <result column="workYears" property="workYears"></result>
        <result column="workTitle" property="workTitle"></result>

        <result column="fmAllIncome" property="fmAllIncome"></result>
        <result column="fmExpenses" property="fmExpenses"></result>
        <result column="fmincomeSrc" property="incomeSrc"></result>
        <result column="fmPerIncome" property="perIncome"></result>
        <result column="fmOtherMemberIn" property="fmOtherMemberIn"></result>
        <result column="fmExpensesProj" property="fmExpensesProj"></result>
        <result column="fmInOutRatio" property="fmInOutRatio"></result>

        <result column="fmAllAssets" property="fmAllAssets"></result>
        <result column="mainAssets" property="mainAssets"></result>

        <result column="financialInfo" property="financialInfo"></result>
        <result column="financialDepositOurBank" property="financialDepositOurBank"></result>
        <result column="financialDepositOtherBank" property="financialDepositOtherBank"></result>

        <result column="fmIncurDebts" property="fmIncurDebts"></result>
        <result column="fmIncurOurBankDebts" property="fmIncurOurBankDebts"></result>
        <result column="fmIncurOtherBankDebts" property="fmIncurOtherBankDebts"></result>
        <result column="fmIncurLoanPurpose" property="fmIncurLoanPurpose"></result>
        <result column="fmIncurLoanShap" property="fmIncurLoanShap"></result>

        <result column="finaServiceUsedProduct" property="UsedProduct"></result>
        <result column="finaServiceIsMoneyNeed" property="isMoneyNeed"></result>
        <result column="finaServiceMoneyTodo" property="moneyTodo"></result>
        <result column="finaServiceMoneyCount" property="moneyCount"></result>
        <result column="finaServiceTimeLimit" property="timeLimit"></result>
        <result column="finaServiceGuarantee" property="Guarantee"></result>
        <result column="finaServiceBankCard" property="bankCard"></result>
        <result column="finaServiceEleBankBusiness" property="bankBusiness"></result>
        <result column="finaServiceAgentPayBusiness" property="agentPayBusiness"></result>
        <result column="finaServiceAutoBusiness" property="auto"></result>
        <result column="finaServicePrivateLoan" property="privateLoan"></result>
        <result column="finaServicePublicLoan" property="publicLoan"></result>
        <result column="finaServiceNewRequirement" property="newRequirement"></result>

        <result column="custManagerLoanSitu" property="loanSitu"></result>
        <result column="custManagerCreditRecord" property="creditRecord"></result>
        <result column="custManagerOtherBankRecord" property="otherBankRecord"></result>
        <result column="custManagerHouseToMoney" property="houseToMoney"></result>

    </resultMap>

    <select id="queryAppointInfoByUserId" parameterType="java.lang.Long" resultMap="allColumnInfoList">
        SELECT a.*, b.*, c.*, h.*, z.*, w.*, n.* FROM baseinfo a LEFT JOIN incomeexpenses b ON  b.`recordId` = a.`recordId`
            LEFT JOIN familyassets c ON c.`recordId`=a.`recordId`
            LEFT JOIN financialassets h ON h.`assetsId`=c.`assetsId`
            LEFT JOIN familyincurdebts z ON z.`recordId`=a.`recordId`
            LEFT JOIN financeservices w ON w.`recordId`=a.`recordId`
            LEFT JOIN customermanagereva n ON n.`recordId`=a.`recordId`
            LEFT JOIN t_appoint t ON t.`recordId`=a.`recordId`
            WHERE t.`user_id` = #{userId} and t.`downloaded` = 0
    </select>

    <update id="updateAppointStatus" parameterType="java.lang.Long">
        update t_appoint set downloaded = 1 where recordId = #{recordId}
    </update>

    <!--网点-->
    <select id="getNetWorkByAdmin" resultMap="userListInfo">
        select org.organizationName from organizationInfo org
    </select>
    <select id="getNetWorkByNormal" parameterType="java.lang.Long" resultMap="userListInfo">
            select org.organizationName from usersinfo u
            left outer join organizationInfo org on u.organizationId=org.organizationId
            where u.userId=#{userId}
    </select>

    <!--<resultMap id="appointMap" type="com.rcuinfomanager.model.AppointInfo">
        <result property="recordId" column="recordId"></result>
        <result property="customerName" column="customerName"></result>
        <result property="telephone" column="telephone"></result>
        <result property="organizationName" column="organizationName"></result>
        <result property="displayUserName" column="displayUserName"></result>
    </resultMap>-->
    <!--指派-->
    <select id="getAppointInfoList" parameterType="java.lang.Long" resultType="com.rcuinfomanager.model.AppointInfo">
          select b.recordId,b.customerName,b.telephone
          from baseinfo b
          where b.recordId=#{recordId}
    </select>
    <!--保存指派-->
    <insert id="saveAppointInfo" parameterType="com.rcuinfomanager.model.AppointInfo">
          insert into t_appoint(recordId,user_id)
          values (#{id},#{userId})
    </insert>
    <resultMap id="userNameMap" type="com.rcuinfomanager.model.User">
        <result column="userId" property="userId"></result>
        <result column="userName" property="userName"></result>
    </resultMap>
    <select id="getUserNameList" resultMap="userNameMap">
          select u.userId,u.userName from usersinfo u
    </select>
    <!--保存验收-->
    <update id="saveChecksInfo" parameterType="com.rcuinfomanager.model.CustomerListInfo">
        update baseinfo b set b.state=#{state} where b.recordId=#{id}
    </update>

    <select id="getBaseInfoByCustomerAndCerNum" parameterType="java.lang.String" resultType="com.rcuinfomanager.model.BaseInfo">
        select * from baseinfo where customerName = #{customerName} and cerNum = #{cerNum}
    </select>
    <select id="getBaseInfoByCerNum" parameterType="java.lang.String" resultType="com.rcuinfomanager.model.BaseInfo">
        select * from baseinfo where cerNum = #{cerNum}
    </select>

    <update id="updateBaseInfoById" parameterType="com.rcuinfomanager.webservice.model.AllColumnInfo">
        update baseinfo set customerName = #{customerName},cerNum = #{cerNum},village = #{village}, gender = #{gender}, isFarmer = #{isFarmer}, cerType = #{cerType},cerValidityFrom = #{cerValidityFrom} ,
           cerValidityTo = #{cerValidityTo}, customerType = #{custType}, birthday = #{birthday}, nationality = #{nationality}, isHavePassport = #{isHavePassport},
           nation = #{nation}, poliLaspect = #{poliLaspect}, address = #{address}, postcode = #{postcode}, telephone = #{telephone}, mbPhoneNum = #{mbPhoneNum},
           areaCode = #{areaCode}, areaName = #{areaName}, highestDegree = #{highestDegree}, highestEdu = #{highestEdu}, health = #{health},
           bankRelation = #{bankRelation}, liveCondition = #{liveCondition}, maritalStatus = #{maritalStatus}, socialSecurity = #{socialSecurity},
           bankPartnership = #{bankPartnership}, profession = #{profession}, businessProj = #{businessProj}, businessYear = #{businessYear},
           businessSite = #{businessSite}, businessProp = #{businessProp}, moneySitu = #{moneySitu},  inputMoney = #{inputMoney},
           ownMoney = #{ownMoney}, yearIncome = #{yearIncome}, annualWageIncome = #{annualWageIncome}, workYears = #{workYears}, workSitu = #{workSitu},
           unitProp = #{unitProp}, unitIndustryId = #{unitIndustryId}, unitIndustryName = #{unitIndustryName}, department = #{department}, unitType = #{unitType},
           duties = #{duties}, workTitle = #{workTitle}, state = #{status}, userName = #{userName}
        where recordId = #{recordId}
    </update>

    <insert id="saveBaseInfoFromClient" parameterType="com.rcuinfomanager.webservice.model.AllColumnInfo" >

        <selectKey resultType="java.lang.Long" keyProperty="recordId" order="AFTER">
            SELECT @@IDENTITY
        </selectKey>

        insert into baseinfo(village, gender, isFarmer, cerType, cerValidityFrom, cerValidityTo, customerType, birthday, nationality, isHavePassport,nation, poliLaspect,
           address, postcode, telephone, mbPhoneNum, areaCode, areaName, highestDegree,highestEdu,health,
           bankRelation, liveCondition,maritalStatus, socialSecurity,
           bankPartnership, profession, businessProj, businessYear,
           businessSite, businessProp, moneySitu,inputMoney,
           ownMoney, yearIncome, annualWageIncome, workYears, workSitu,
           unitProp, unitIndustryId, unitIndustryName, department,unitType, duties, workTitle, customerName,cerNum, state, userName)
        values(#{village}, #{gender}, #{isFarmer}, #{cerType}, #{cerValidityFrom},#{cerValidityTo}, #{custType}, #{birthday}, #{nationality}, #{isHavePassport}, #{nation}, #{poliLaspect},
           #{address}, #{postcode},#{telephone}, #{mbPhoneNum}, #{areaCode},  #{areaName}, #{highestDegree}, #{highestEdu}, #{health},
           #{bankRelation}, #{liveCondition}, #{maritalStatus}, #{socialSecurity},
           #{bankPartnership}, #{profession}, #{businessProj}, #{businessYear},
           #{businessSite}, #{businessProp}, #{moneySitu}, #{inputMoney},
           #{ownMoney}, #{yearIncome}, #{annualWageIncome}, #{workYears}, #{workSitu},
           #{unitProp}, #{unitIndustryId}, #{unitIndustryName}, #{department}, #{unitType},
           #{duties}, #{workTitle}, #{customerName}, #{cerNum}, #{status}, #{userName})
    </insert>

    <update id="updateIncomeexpenses" parameterType="com.rcuinfomanager.webservice.model.AllColumnInfo">
        update incomeexpenses set fmAllIncome = #{fmAllIncome}, fmExpenses = #{fmExpenses}, incomeSrc = #{fmIncomeSrc}, perIncome = #{fmPerIncome},
          fmOtherMemberIn = #{fmOtherMemberIn}, fmExpensesProj = #{fmExpensesProj}, fmInOutRatio = #{fmInOutRatio}
        where recordId = #{recordId}
    </update>

    <update id="updateFamilyassets" parameterType="com.rcuinfomanager.webservice.model.AllColumnInfo">
        update familyassets set fmAllAssets = #{fmAllAssets}, mainAssets = #{mainAssets}
        where recordId = #{recordId}
    </update>

    <insert id="saveFamilyassets" parameterType="com.rcuinfomanager.model.FamilyAssets">
        <selectKey resultType="java.lang.Long" keyProperty="assetsId" order="AFTER">
            SELECT @@IDENTITY
        </selectKey>

        insert into familyassets(recordId,fmAllAssets, mainAssets) values (recordId,fmAllAssets, mainAssets)
    </insert>

    <update id="updateFamilyincurdebts" parameterType="com.rcuinfomanager.webservice.model.AllColumnInfo">
        update familyincurdebts set fmIncurDebts = #{fmIncurDebts}, ourBankDebts = #{fmIncurOurBankDebts},
         otherBankDebts = #{fmIncurOtherBankDebts}, loanPurpose = #{fmIncurLoanPurpose}, loanShap = #{fmIncurLoanPurpose}
        where recordId = #{recordId}
    </update>

    <update id="updateFinancialassets" parameterType="com.rcuinfomanager.webservice.model.AllColumnInfo">
        update financialassets set financialInfo = #{financialInfo}, depositOurBank = #{financialDepositOurBank}, depositOtherBank = #{financialDepositOtherBank}
         where  assetsId = #{assetsId}
    </update>

    <update id="updateFinanceservices" parameterType="com.rcuinfomanager.webservice.model.AllColumnInfo">
        update financeservices set usedProduct = #{finaServiceUsedProduct}, isMoneyNeed = #{finaServiceIsMoneyNeed},
          moneyTodo = #{finaServiceMoneyTodo}, moneyCount = #{finaServiceMoneyCount},
          timeLimit = #{finaServiceTimeLimit}, guarantee = #{finaServiceGuarantee},
          bankCard = #{finaServiceBankCard}, electronBank = #{finaServiceEleBankBusiness},
          agentPay = #{finaServiceAgentPayBusiness}, auto = #{finaServiceAutoBusiness},
          privateLoan = #{finaServicePrivateLoan}, publicLoan = #{finaServicePublicLoan}, newRequirement = #{finaServiceNewRequirement}
        where recordId = #{recordId}
    </update>

    <update id="updateCustomermanagereva" parameterType="com.rcuinfomanager.webservice.model.AllColumnInfo">
        update customermanagereva set loanSitu = #{custManagerLoanSitu},creditRecord = #{custManagerCreditRecord},
          otherBankRecord = #{custManagerOtherBankRecord}, houseToMoney = #{custManagerHouseToMoney}
        where recordId = #{recordId}
    </update>

    <delete id="deleteCarsinfoByAssetsId" parameterType="java.lang.Long">
        DELETE FROM carsinfo WHERE assetsId = #{assetsId};
    </delete>

    <insert id="saveCarsinfo" parameterType="com.rcuinfomanager.model.CarsInfo">
        insert into carsinfo(assetsId,carsInfo,carsWorth,carsIsInstallment,carsUsingInfo) values(#{assetsId},#{carsInfo},#{carsWorth},#{carsIsInstallment},#{carsUsingInfo})
    </insert>

    <delete id="deleteHouseInfoByAssetsId" parameterType="java.lang.Long">
         DELETE FROM housepropertyinfo WHERE assetsId = #{assetsId};
    </delete>

    <insert id="saveHouseInfo" parameterType="com.rcuinfomanager.model.HouseInfo">
        insert into housepropertyinfo(assetsId,nature,site,structure,purpose,floorNum,usedSitu,houseArea,houseWorth,isInstallment,hasCredentials,note1)
         values(#{assetsId},#{nature},#{site},#{structure},#{purpose},#{floorNum},#{usedSitu},#{houseArea}, #{houseWorth},#{isInstallment},#{hasCredentials},#{note1})
    </insert>

    <delete id="deleteLandInfoByAssetsId" parameterType="java.lang.Long">
         DELETE FROM landInfo WHERE assetsId = #{assetsId};
    </delete>

    <insert id="saveLandInfo" parameterType="com.rcuinfomanager.model.LandInfo">
        insert into landInfo(assetsId,area,worth,property,type,usedSitu,isMoneyClear)
          values(#{assetsId},#{area},#{worth},#{property},#{type},#{usedSitu}, #{isMoneyClear})
    </insert>

    <delete id="deleteFamilyMemberInfoByRecordId" parameterType="java.lang.Long">
         DELETE FROM familymemberinfo WHERE recordId = #{recordId};
    </delete>

    <insert id="saveFamilyMember" parameterType="com.rcuinfomanager.model.FamilyMember">
        insert into familymemberinfo(recordId,familyMemberCerNum,cerNum,familyMemberName,yearIncome,leaderRelation,profession,address)
          values(#{recordId},#{familyMemberCerNum},#{cerNum},#{familyMemberName},#{yearIncome},#{leaderRelation},#{profession}, #{address})
    </insert>

    <select id="" resultType="java.lang.Integer" parameterType="java.lang.String">
        select state from baseinfo where cerNum = #{cerNum}
    </select>

    <!--二-->
    <!--<resultMap id="financeServicesMap" type="com.rcuinfomanager.model.FinanceServices">
    <result column="recordId" property="recordId"></result>
    <result column="usedProduct" property="usedProduct"></result>
    <result column="satisfaction" property="satisfaction"></result>
    <result column="isMoneyNeed" property="isMoneyNeed"></result>
    <result column="moneyTodo" property="moneyTodo"></result>
    <result column="moneyCount" property="moneyCount"></result>
    <result column="timeLimit" property="timeLimit"></result>
    <result column="guarantee" property="guarantee"></result>
    <result column="fmDepositTodo" property="fmDepositTodo"></result>
    <result column="needServices" property="needServices"></result>
    <result column="needServicesElse" property="needServicesElse"></result>
    <result column="holpForServices" property="holpForServices"></result>
    <result column="suggestion" property="suggestion"></result>
    <result column="bankCard" property="bankCard"></result>
    <result column="electronBank" property="electronBank"></result>
    <result column="agentPay" property="agentPay"></result>
    <result column="auto" property="auto"></result>
    <result column="newRequirement" property="newRequirement"></result>
    <result column="publicLoan" property="publicLoan"></result>
    <result column="privateLoan" property="privateLoan"></result>
    <result column="note1" property="note1"></result>
</resultMap>-->
    <select id="getFinanceServicesList" parameterType="java.lang.Long" resultType="com.rcuinfomanager.model.FinanceServices" >
        select  f.recordId,f.usedProduct,f.satisfaction,f.isMoneyNeed,f.moneyTodo,f.moneyCount,f.timeLimit,
        f.guarantee,f.fmDepositTodo,f.needServices,f.needServicesElse,f.holpForServices,f.suggestion,f.bankCard,
        f.electronBank,f.agentPay,f.auto,f.newRequirement,f.publicLoan,f.privateLoan
        from financeservices f
        where f.recordId=#{id}
    </select>
    <!--三-->
    <select id="getVillageManagerEvaList" resultType="com.rcuinfomanager.model.VillageManagerEva">
          select * from villagemanagereva  where recordId=#{id}
    </select>
    <!--四-->
    <select id="getCustomerManagerEvaList" resultType="com.rcuinfomanager.model.CustomerManagerEva">
          select * from customermanagereva where recordId=#{id}
    </select>

   <select id="getBaseInfoByRecordId" resultType="com.rcuinfomanager.model.BaseInfo" parameterType="java.lang.Long">
       select * from baseinfo where recordId = #{recordId}
   </select>

    <select id="getAllHouseholdInfos" resultType="java.lang.Long">
       select recordId from baseinfo
    </select>

    <resultMap id="submitItemMap" type="com.rcuinfomanager.webservice.model.SubmitItem">
        <result property="customerName" column="customerName"></result>
        <result property="cerNum" column="cerNum"></result>
        <result property="address" column="address"></result>
    </resultMap>

    <select id="querySubmitList" resultMap="submitItemMap" parameterType="java.lang.String">
        SELECT customerName, cerNum, address FROM baseinfo WHERE username = #{userName}
    </select>

    <select id="getStatusByCerNum" parameterType="java.lang.String">
        select state from baseinfo where cerNum = #{cerNum}
    </select>
</mapper>