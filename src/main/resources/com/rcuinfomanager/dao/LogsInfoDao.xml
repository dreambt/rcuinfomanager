<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rcuinfomanager.dao.LogsInfoDao">

    <!--保存日志-->
    <insert id="saveLogsInfo" parameterType="com.rcuinfomanager.model.LogsInfo" >
            INSERT INTO logsinfo(operatedTime,userId,operation)
            VALUES(#{operatedTime},#{userId},#{operation})
    </insert>

    <resultMap id="logsInfoMap" type="com.rcuinfomanager.model.LogsInfo">
        <result column="operatedTime" property="operatedTime"></result>
        <result column="userName" property="userName"></result>
        <result column="operation" property="operation"></result>
    </resultMap>
    <!--获取日志信息-->
    <!--Admin-->
    <select id="getLogsInfoByAdminListPage" resultMap="logsInfoMap">
           select lo.operatedTime,u.userName,lo.operation
           from logsinfo lo
           left join usersinfo u on lo.userId=u.userId
           where 1=1
           <choose>
            <when test="beginTime != null and endTime != null and beginTime != '' and endTime != ''">
                and substring(lo.operatedTime, 1, 10) between #{beginTime} and #{endTime}
            </when>
            <when test="beginTime != null and beginTime != ''">
                and substring(lo.operatedTime, 1, 10) like #{beginTime}
            </when>
            <when test="endTime != null and endTime != ''">
                and substring(lo.operatedTime, 1, 10) like #{endTime}
            </when>
            <otherwise>
                AND 1 = 1
            </otherwise>
           </choose>
           <if test="userName != null and userName != ''">
               and  u.userName like #{userName}
           </if>
           limit #{beginPageNum}, #{endPageNum}
    </select>

    <select id="queryAdminByLogsInfoByCount" resultType="java.lang.Long">
          select count(*)
        from logsinfo lo
        left join usersinfo u on lo.userId=u.userId
        where 1=1
        <choose>
            <when test="beginTime != null and endTime != null and beginTime != '' and endTime != ''">
                and substring(lo.operatedTime, 1, 10) between #{beginTime} and #{endTime}
            </when>
            <when test="beginTime != null and beginTime != ''">
                and substring(lo.operatedTime, 1, 10) like #{beginTime}
            </when>
            <when test="endTime != null and endTime != ''">
                and substring(lo.operatedTime, 1, 10) like #{endTime}
            </when>
            <otherwise>
                AND 1 = 1
            </otherwise>
        </choose>
        <if test="userName != null and userName != ''">
            and  u.userName like #{userName}
        </if>
    </select>
    <!--Normal-->
    <select id="queryNormalByLogsInfoByPage" resultMap="logsInfoMap">
        select lo.operatedTime,u.userName,lo.operation
        from logsinfo lo
        left join usersinfo u on lo.userId=u.userId
        where lo.userId=#{userId}
        <choose>
            <when test="beginTime != null and endTime != null and beginTime != '' and endTime != ''">
                and substring(lo.operatedTime, 1, 10) between #{beginTime} and #{endTime}
            </when>
            <when test="beginTime != null and beginTime != ''">
                and substring(lo.operatedTime, 1, 10) like #{beginTime}
            </when>
            <when test="endTime != null and endTime != ''">
                and substring(lo.operatedTime, 1, 10) like #{endTime}
            </when>
            <otherwise>
                AND lo.userId=#{userId}
            </otherwise>
        </choose>
        <if test="userName != null and userName != ''">
            and  u.userName like #{userName}
        </if>
        limit #{beginPageNum}, #{endPageNum}
    </select>
    <select id="queryNormalByLogsInfoByCount" parameterType="java.lang.Long" resultType="java.lang.Long">
           select count(*)
           from logsinfo lo
           left join usersinfo u on lo.userId=u.userId
           where lo.userId=#{userId}
        <choose>
            <when test="beginTime != null and endTime != null and beginTime != '' and endTime != ''">
                and substring(lo.operatedTime, 1, 10) between #{beginTime} and #{endTime}
            </when>
            <when test="beginTime != null and beginTime != ''">
                and substring(lo.operatedTime, 1, 10) like #{beginTime}
            </when>
            <when test="endTime != null and endTime != ''">
                and substring(lo.operatedTime, 1, 10) like #{endTime}
            </when>
            <otherwise>
                AND lo.userId=#{userId}
            </otherwise>
        </choose>
        <if test="userName != null and userName != ''">
            and  u.userName like #{userName}
        </if>
    </select>











<!--    &lt;!&ndash;查询&ndash;&gt;
    &lt;!&ndash;Admin&ndash;&gt;
    <select id="getLogsAllByAdminList" parameterType="java.lang.String" resultMap="logsInfoMap">
        select lo.operatedTime,u.userName,lo.operation
           from logsinfo lo
           left join usersinfo u on lo.userId=u.userId
           where lo.operatedTime between #{beginTime} and #{endTime}
           and u.userName like #{userName} limit #{beginPageNum}, #{endPageNum}
    </select>
    <select id="getLogsBeginAndEndTimeByAdminList" parameterType="java.lang.String" resultMap="logsInfoMap">
        select lo.operatedTime,u.userName,lo.operation
           from logsinfo lo
           left join usersinfo u on lo.userId=u.userId
           where substring(lo.operatedTime, 1, 10) between #{beginTime} and #{endTime} limit #{beginPageNum}, #{endPageNum}
    </select>
    <select id="getLogsBeginTimeByAdminList" parameterType="java.lang.String" resultMap="logsInfoMap">
        select lo.operatedTime,u.userName,lo.operation
           from logsinfo lo
           left join usersinfo u on lo.userId=u.userId
           where substring(lo.operatedTime, 1, 10) like #{beginTime} limit #{beginPageNum}, #{endPageNum}
    </select>
    <select id="getLogsEndTimeByAdminList" parameterType="java.lang.String" resultMap="logsInfoMap">
        select lo.operatedTime,u.userName,lo.operation
           from logsinfo lo
           left join usersinfo u on lo.userId=u.userId
           where substring(lo.operatedTime, 1, 10) like #{endTime} limit #{beginPageNum}, #{endPageNum}
    </select>
    <select id="getLogsUNameByAdminList" parameterType="java.lang.String" resultMap="logsInfoMap">
        select lo.operatedTime,u.userName,lo.operation
           from logsinfo lo
           left join usersinfo u on lo.userId=u.userId
           where u.userName like #{userName} limit #{beginPageNum}, #{endPageNum}
    </select>










    &lt;!&ndash;Normal&ndash;&gt;
    <select id="getLogsAllList" parameterType="java.lang.String" resultMap="logsInfoMap">
        select lo.operatedTime,u.userName,lo.operation
           from logsinfo lo
           left join usersinfo u on lo.userId=u.userId
           where lo.operatedTime between #{beginTime} and #{endTime}
           and u.userName like #{userName}
           and lo.userId=#{userId} limit #{beginPageNum}, #{endPageNum}
    </select>
    <select id="getLogsBeginAndEndTimeList" parameterType="java.lang.String" resultMap="logsInfoMap">
        select lo.operatedTime,u.userName,lo.operation
           from logsinfo lo
           left join usersinfo u on lo.userId=u.userId
           where substring(lo.operatedTime, 1, 10) between #{beginTime} and #{endTime}
           and lo.userId=#{userId} limit #{beginPageNum}, #{endPageNum}
    </select>
    <select id="getLogsBeginTimeList" parameterType="java.lang.String" resultMap="logsInfoMap">
        select lo.operatedTime,u.userName,lo.operation
           from logsinfo lo
           left join usersinfo u on lo.userId=u.userId
           where substring(lo.operatedTime, 1, 10) like #{beginTime}
           and lo.userId=#{userId} limit #{beginPageNum}, #{endPageNum}
    </select>
    <select id="getLogsEndTimeList" parameterType="java.lang.String" resultMap="logsInfoMap">
        select lo.operatedTime,u.userName,lo.operation
           from logsinfo lo
           left join usersinfo u on lo.userId=u.userId
           where substring(lo.operatedTime, 1, 10) like #{endTime}
           and lo.userId=#{userId} limit #{beginPageNum}, #{endPageNum}
    </select>
    <select id="getLogsUNameList" parameterType="java.lang.String" resultMap="logsInfoMap">
        select lo.operatedTime,u.userName,lo.operation
           from logsinfo lo
           left join usersinfo u on lo.userId=u.userId
           where u.userName like #{userName}
           and lo.userId=#{userId} limit #{beginPageNum}, #{endPageNum}
    </select>-->

</mapper>